<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--声明德鲁伊数据库连接池-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxActive" value="20"/>
    </bean>
    <!--获取SqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--指定mybatis配置文件的地址-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>
    <!--声明dao包下的所有接口,创建bean-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        <property name="basePackage" value="com.bjpowernode.crm.settings.dao"/>
    </bean>
    <!--声明事务管理器对象-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--声明业务方法的事务属性-->
    <tx:advice id="myAdvice" transaction-manager="transactionManager">
        <!--配置事务属性-->
        <tx:attributes>
            <!--设置需要使用事务方法
                method:
                    name:需要使用事务的方法名称
                    propagation:表示事务的传播级别
                    isolation:表示事务的隔离级别
                    read-only:是否只读,默认false
                    rollback-for:表示需要回滚的异常,只要是运行时异常都会回滚
                                在rollbackFor中声明的异常也会回滚
            -->
            <tx:method name="*" propagation="REQUIRED" isolation="DEFAULT" read-only="false"
                       rollback-for="java.lang.NullPointerException"/>
        </tx:attributes>
    </tx:advice>
    <!--声明aop切入点表达式:表示哪些包中的类需要使用事务-->
    <aop:config>
        <!--表示所有service包以及其子包下的所有类-->
        <aop:pointcut id="servicePt" expression="execution(* com.bjpowernode.crm.settings.service.impl.*.*(..))"/>
        <!--配置增强器,将advisor和advice连接其起来,-->
        <aop:advisor advice-ref="myAdvice" pointcut-ref="servicePt"/>
    </aop:config>


</beans>